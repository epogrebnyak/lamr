import{_ as i,c as s,o as a,V as t}from"./chunks/framework.xIdpYtwv.js";const E=JSON.parse('{"title":"ASCII art logo","description":"","frontmatter":{"title":"ASCII art logo"},"headers":[],"relativePath":"code/logo.py.md","filePath":"code/logo.py.md"}'),e={name:"code/logo.py.md"},n=t(`<p>Turn a string into ASCII art using a font style.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> random </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> choice</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> art </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ASCII_FONTS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, text2art  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># type: ignore</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">font </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> choice(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ASCII_FONTS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slogan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Python 3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text2art(slogan, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">font, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">space</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sample font:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, font)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sample text:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, text)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ASCII art:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result)</span></span></code></pre></div><blockquote><p>Run <code>lamr code logo.py --all</code> to get this code with excercises.</p></blockquote><h2 id="review-questions" tabindex="-1">Review questions <a class="header-anchor" href="#review-questions" aria-label="Permalink to &quot;Review questions&quot;">​</a></h2><ol><li>What is ASCII? What is ASCII art? How could you use it?</li><li>What does <code>text2art()</code> function do? What arguments does <code>text2art()</code> accept? What is their meaning?</li><li>Each time you run the program the text font changes. Why?</li><li>What is the meaning of the word &#39;font&#39; in this program?</li><li>Which of the fonts styles displayed you liked? Why are they appealing?</li><li>If you created you new font style for ASCII art what would it be?</li></ol><h2 id="excercises" tabindex="-1">Excercises <a class="header-anchor" href="#excercises" aria-label="Permalink to &quot;Excercises&quot;">​</a></h2><ol><li><p>Print a set of ASCII symbols to console.</p></li><li><p>Consult with <a href="https://github.com/sepandhaghighi/art/blob/master/FontList.ipynb" target="_blank" rel="noreferrer">https://github.com/sepandhaghighi/art/blob/master/FontList.ipynb</a> Pick a font name and use it in your program.</p></li><li><p>How many charaters does the logo you selected have? How many lines?</p></li><li><p>See what <code>print(&quot;Available fonts:&quot;, &quot;, &quot;.join(ASCII_FONTS))</code> does.</p></li><li><p>Print a text in <code>n</code> random styles. Set <code>n</code> to various numbers (for example 2, 3, or 5).</p></li><li><p>Think how you can implement the following user scenario in a Python program.</p><ul><li>Ask a user for input - what text to put on a logo.</li><li>Pick a few font styles that you think are most impressive.</li><li>Print a logo using these styles.</li><li>Ask which logo user likes, print the logo that the user selected.</li><li>If the user is unhappy continue with more logos.</li></ul></li><li><p>Write a program for the first few or all of the steps of the above scenario.</p></li></ol><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ol><li>How do I get a list of all the ASCII characters using Python? URL: <a href="https://stackoverflow.com/a/5891469/1758363" target="_blank" rel="noreferrer">https://stackoverflow.com/a/5891469/1758363</a></li><li>Wiki about ASCII art. URL: <a href="https://en.wikipedia.org/wiki/ASCII_art" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/ASCII_art</a></li><li>ASCII Generator. URL: <a href="https://ascii-generator.site/t/" target="_blank" rel="noreferrer">https://ascii-generator.site/t/</a></li><li>Dive into <code>art</code> package code (with caution, the code is a bit old-fashioned). URL: <a href="https://github.com/sepandhaghighi/art/blob/abfc138110e04f44ce489556e8ed5cf14dee671f/art/art.py#L480" target="_blank" rel="noreferrer">https://github.com/sepandhaghighi/art/blob/abfc138110e04f44ce489556e8ed5cf14dee671f/art/art.py#L480</a></li></ol>`,9),l=[n];function h(o,r,p,k,c,d){return a(),s("div",null,l)}const y=i(e,[["render",h]]);export{E as __pageData,y as default};
