[[topics."Values and operators"]]

title = "Numbers"
tldr = "You can use integer and real numbers in Python."
content = """
Interger is a whole number like `1`, `2`, `3`, `-5`, `-20` and so on.
They represent counts or quantities, when measured as whole units or items. 

A real number includes a decimal point like `0.33` or `-100.25`.
They can represent a result of some computation or measurement that inbcludes a fraction of a unit. 
Real numbers are also called a floating point numbers, or float.

The computer tries its best to store a real number with maximum precision,
but can loose some information due to rounding.

Both integer and real numbers can be positive or negative and include zero.
"""
questions = [
  "Provide an example of something that is measured as an integer number.",
  "Provide an example of something that is measured as a float number.",
  "Can you think of a border case where it is not clear if the measurement should be done as an integer or a float number?",
  "Integer or float: number of taxi rides per day, ride distance, distance travelled on a chessboard, elevator floor, house surface area."
]

[[topics."Values and operators"]]

title = "Arithmetic operators"
tldr = "Python can work as a simple calculator."
content = """"""
questions = [
  "Does the variable name always remain the same throughout the program?",
  "Does the variable value always remain the same throughout the program?"
]


[[topics."Variables"]]

title = "What is a variable?"
tldr = "A variable is a name that is bound to a value."
content = """A variable is an identifier that is used to refer to a specific value 
stored in the memory of a computer.
The variable serves as a "nickname", or an "alias", for the value.

The value can be of various types, such as a number, a string, or some other object, 
and it can be passed to various parts of the program, modified or reassigned 
during the execution of the program.

Concept of a variable in programming is slightly different from mathematics.
In mathematics, a variable is often used to represent an unknown value that needs to be derived by solving an equation.
In programming the variable value is known after assignment and can be used in further computations.
"""

questions = [
  "Does the variable name always remain the same throughout the program?",
  "Does the variable value always remain the same throughout the program?"
]

[[topics."Variables"]]

title = "Variable assignment"
tldr = "`x=1` is an example of variable assignment."
content = """In Python operator `=` is used to assign a value to a variable. 
Expression to the right of the `=` operator is evaluated first, 
and the result is then assigned to the variable name on the left.

```python
r = 2.5
area = 3.1415 * r * r
print(area)
```

::: details Assignment operator in other programming languages

To highlight the difference between variable assignment and mathematic equation, 
some other programming languages use  `:=` (Pascal) or `<-` (R) as an assignment operator.

&nbsp;

```pascal
x := 1   // assignment of value 1 to variable x in Pascal 
```

&nbsp;

```R
y <- 3   # assignment of value 3 to variable y in R
```
:::
"""


[[topics."Variables"]]

title = "Changing variables" 
tldr = "In Python all variables are mutable."
content = """After initially assigning a value to a variable in Python you can reassign 
a new value to it.

Here is an example with strings.

```python 
favourite_food = "My favourite food is mushroom soup."
print(favourite_food)

# later in the same program

favourite_food = "Now my favourite food is apple pie."
print(favourite_food)
```

Another example that uses integers:

```python
year = 1991       # assignment of value of 1991 to variable
year = year + 1   # new assignment to variable, not an equation
print(year)       # prints 1992
```

A typical situation where a variable changes is a counter,
a variable that increases by one at each step.

```python
string = ("Now my favourite food is Apple Pie, " +
          "but I liked Mushroom Soup before.")
letter = "m"
counter = 0
for s in string:
   if s == letter: 
      counter = counter + 1
print("We searched for letter:", letter)
print("In the following string:", string)
print("The letter was found", counter, "times")
```
"""
questions = [
  "In code example above screw the counter to wrong starting value.",
  "Think of different and better variable names instead of `string`, `s`, `letter` and `counter` in code above.",
  "Count number of spaces in `string` and print the result.",
  "What other variable does seem to change other than `counter`?",
  "Try removing `if` from code. How did the meaning of code change? What else needs to be changed in this code without `if`?",
  "Can we adapt this code to search for any letter, regardless of lower or upper case?",
  "Can we adapt this code to search for letter combinations?"
]


#[[topics."Variables"]]

#title = "More suggestions"
#tldr = "What ChatGPT thought about adding to this section."
#content = """
#If the lesson is intended for beginner programmers, it's probably best to keep the topic list simple and not go into more advanced topics like scope, debugging and best practices.

#However, here are some additional topics that might be useful:

#- The different data types that can be stored in a variable.
#- Variables as function parameters.
#- The scope of a variable (i.e. where in the code it can be accessed).
#- How to debug variable-related errors in a program. Is `print()` ok for this?
#- Best practices for using variables, such as initializing variables before use, avoiding using the same variable name for different purposes, and avoiding using hard-coded values in a program.
#"""